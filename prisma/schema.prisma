// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  createdAt DateTime @default(now())
  email String  @unique
  username String @unique
  nickname String
  password String
  avatar String?
  bio String?
  conversations Conversation[]
  messages Message[]
  friends  User[] @relation("Friends")
  friendOf User[] @relation("Friends")
  friendRequests User[] @relation("FriendRequests")
  friendRequestsOf User[] @relation("FriendRequests")
  friendRequestsSent User[] @relation("FriendRequestsSent")
  friendRequestsSentOf User[] @relation("FriendRequestsSent")
  blockedUsers User[] @relation("BlockedUsers")
  blockedBy User[] @relation("BlockedUsers")
}

model Conversation {
  id    Int     @id @default(autoincrement())
  name String
  image String
  users User[]
  messages Message[]
}

model Message {
  id    Int     @id @default(autoincrement())
  createdAt DateTime @default(now())
  content String
  user User? @relation(fields: [userId], references: [id])
  userId Int
  conversation Conversation? @relation(fields: [conversationId], references: [id])
  conversationId Int
}